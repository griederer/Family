rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isFamilyMember(familyId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid));
    }
    
    function isParent(familyId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)).data.role in ['parent', 'admin'];
    }
    
    function isAdmin(familyId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isChild(familyId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/families/$(familyId)/members/$(request.auth.uid)).data.role == 'child';
    }
    
    function canEditFamilyData(familyId) {
      return isParent(familyId) || isAdmin(familyId);
    }
    
    // Family collection rules
    match /families/{familyId} {
      allow read: if isFamilyMember(familyId);
      allow write: if isAdmin(familyId);
      
      // Family members
      match /members/{memberId} {
        allow read: if isFamilyMember(familyId);
        allow write: if isAdmin(familyId) || 
                        (request.auth.uid == memberId && 
                         (!resource.exists || resource.data.role == request.resource.data.role));
      }
      
      // Tasks - collaborative access
      match /tasks/{taskId} {
        allow read, write: if isFamilyMember(familyId);
        allow create: if isFamilyMember(familyId) && 
                         request.resource.data.createdBy == request.auth.uid;
      }
      
      // Calendar events - collaborative access
      match /calendar/{eventId} {
        allow read, write: if isFamilyMember(familyId);
        allow create: if isFamilyMember(familyId) && 
                         request.resource.data.createdBy == request.auth.uid;
      }
      
      // Grocery lists - collaborative access
      match /grocery/{listId} {
        allow read, write: if isFamilyMember(familyId);
        allow create: if isFamilyMember(familyId) && 
                         request.resource.data.createdBy == request.auth.uid;
      }
      
      // Budget - parents/admins only (child safety)
      match /budget/{categoryId} {
        allow read, write: if canEditFamilyData(familyId);
      }
      
      // Activity logs - parents/admins only
      match /activity/{activityId} {
        allow read: if canEditFamilyData(familyId);
        allow write: if false; // Logs are system-generated only
      }
      
      // Notifications - user-specific
      match /notifications/{notificationId} {
        allow read: if isFamilyMember(familyId) && 
                       resource.data.userId == request.auth.uid;
        allow write: if canEditFamilyData(familyId);
      }
    }
    
    // User profiles (global, not family-specific)
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}